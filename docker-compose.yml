version: '3'
services:
  sk03-web:
    container_name: sk03-web
    build:
      context: ./backend  # Kontext složky backend
      dockerfile: Dockerfile  # Název Dockerfile (velké "D")
    ports:
      - "8002:3000"
    volumes:
      - /home/cerny/logs/sk03/backend/logs  # Pro logy
    networks:
      - cdb-network
      - internalnetwork
    depends_on:
      - mongo-db

  sk03-frontend:
    container_name: sk03-frontend
    build:
      context: ./frontend   # Kontext složky, kde se nachází Dockerfile pro frontend
      dockerfile: Dockerfile  # Dockerfile pro React aplikaci ve složce frontend
    ports:
      - "3002:80"  # Naslouchá na portu 3002, přesměruje na port 80 v kontejneru (Nginx)

  mongo-db:
    container_name: sk03-mongo
    image: mongo:latest  # Použijeme oficiální MongoDB image
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin  # Root uživatel
      MONGO_INITDB_ROOT_PASSWORD: password  # Root heslo
    ports:
      - "27017:27017"  # Port MongoDB (default)
    volumes:
      - ./mongo-data:/data/db  # Místní úložiště dat, aby MongoDB data přežila restart kontejneru
    networks:
      - internalnetwork
  
  mongo-express:
    container_name: sk03-mongo-express
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"  # Port where Mongo Express will be available
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin  # MongoDB admin username
      ME_CONFIG_MONGODB_ADMINPASSWORD: password  # MongoDB admin password
      ME_CONFIG_MONGODB_SERVER: sk03-mongo  # The hostname of the MongoDB container
    depends_on:
      - mongo-db
    networks:
      - internalnetwork

networks:
  cdb-network:
    name: cdb-network
    driver: bridge
    external: true
  internalnetwork:
    name: internalnetwork
    driver: bridge
    external: false
